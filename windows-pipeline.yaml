trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: 'winloadsnapshot'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Set variables
      resourceGroupName='pipeline-win'
      diskName='new'
      snapshotId='/subscriptions/43ab43f3-706d-4979-82e0-86025f9ece10/resourceGroups/pipeline-win/providers/Microsoft.Compute/snapshots/newwinsnapshotload'
      location='eastus'
      diskSku='StandardSSD_LRS'
      diskSizeGB=127
      availabilityZone='1'
      vmName='new'
      virtualNetworkName='winpipe-vnet'
      subnetName='default'
      vmSize='Standard_B4ms'

      # Create managed disk from snapshot with availability zone
      az disk create \
        --resource-group $resourceGroupName \
        --name $diskName \
        --source $snapshotId \
        --location $location \
        --sku $diskSku \
        --size-gb $diskSizeGB \
        --zone $availabilityZone \
        --hyper-v-generation V2

      # Create Windows VM using managed disk and public IP address with availability zone
      az vm create \
        --resource-group $resourceGroupName \
        --name $vmName \
        --attach-os-disk "/subscriptions/43ab43f3-706d-4979-82e0-86025f9ece10/resourceGroups/pipeline-win/providers/Microsoft.Compute/disks/$diskName" \
        --os-type windows \
        --location $location \
        --vnet-name $virtualNetworkName \
        --subnet $subnetName \
        --size $vmSize \
        --zone $availabilityZone \
        --license-type Windows_Client

      # Get the public IP address of the VM
      publicIpAddress=$(az vm show -g $resourceGroupName -n $vmName --query publicIps -o tsv)

      # Connect to the VM using Remote Desktop Protocol (RDP) and run the application
      rdpScript=$(cat <<EOF
Add-Type -Path 'C:\Program Files\Microsoft\OnlineManagement\Common\AzureRM\AzureRM.Compute\Connect-AzureRm.ps1'
$creds = Get-Credential
$rdpFile = [IO.Path]::Combine([IO.Path]::GetTempPath(), "$vmName.rdp")
Get-AzureRmRemoteDesktopFile -ResourceGroupName $resourceGroupName -Name $vmName -LocalPath $rdpFile -Credential $creds
Start-Process -FilePath "$rdpFile"
Start-Sleep -Seconds 600
$session = Get-RDMSession -ConnectionBroker 'localhost' -Role RDP-Tcp
Invoke-RDMSession -SessionId $session.Id -Command 'C:\Program Files (x86)\Bold BI Enterprise Edition\Utilities\DeployIIS\DeployIISConsole.exe'
EOF
      )

      # Execute the RDP and application script on the local machine
      echo "$rdpScript" > start-app.ps1
      az vm run-command invoke -g $resourceGroupName -n $vmName --command-id RunPowerShellScript --scripts @start-app.ps1
